// Feature flags para controle de funcionalidades
export const FEATURES = {
  // Controle principal de dados
  USE_SUPABASE: !import.meta.env.VITE_USE_MOCK_DATA || import.meta.env.PROD,
  
  // Autentica√ß√£o
  WHATSAPP_AUTH: false, // Ativar quando implementar n8n
  EMAIL_AUTH: true,
  
  // Pagamentos
  STRIPE_PAYMENTS: false, // Ativar quando configurar
  PIX_PAYMENTS: false,
  
  // Funcionalidades gerais
  NOTIFICATIONS: true,
  BACKUP_RESTORE: false, // Ativar quando est√°vel
  DARK_MODE: true,
  
  // Recursos avan√ßados
  ANALYTICS: false,
  API_INTEGRATIONS: false,
  MULTI_TENANT: false, // App √© single-tenant
  
  // Desenvolvimento
  DEBUG_MODE: import.meta.env.VITE_ENABLE_DEBUG === 'true',
  PERFORMANCE_MONITORING: import.meta.env.DEV,
  
  // M√≥dulos espec√≠ficos
  CONTAS_PAGAR: true,
  CONTAS_RECEBER: true,
  FORNECEDORES: true, // Ser√° migrado para CONTACTS
  CONTACTS: true, // Nova funcionalidade unificada
  CATEGORIAS: true,
  BANCOS: true,
  DASHBOARD: true,
  RELATORIOS: false // Implementar na pr√≥xima fase
} as const;

// Helper para verificar se feature est√° ativa
export function isFeatureEnabled(feature: keyof typeof FEATURES): boolean {
  return FEATURES[feature] === true;
}

// Configura√ß√µes espec√≠ficas por ambiente
export const ENVIRONMENT_CONFIG = {
  development: {
    showDebugInfo: true,
    enableMockData: true,
    logLevel: 'debug'
  },
  
  production: {
    showDebugInfo: false,
    enableMockData: false,
    logLevel: 'error'
  }
} as const;

// Fun√ß√£o para obter configura√ß√£o do ambiente atual
export function getEnvironmentConfig() {
  return import.meta.env.PROD 
    ? ENVIRONMENT_CONFIG.production 
    : ENVIRONMENT_CONFIG.development;
}

// Valida√ß√£o de features conflitantes
export function validateFeatures(): void {
  // Se Supabase est√° ativo, WhatsApp deve estar desabilitado (por enquanto)
  if (FEATURES.USE_SUPABASE && FEATURES.WHATSAPP_AUTH) {
    console.warn('‚ö†Ô∏è WhatsApp auth ainda n√£o implementado com Supabase');
  }
  
  // Debug em produ√ß√£o deve estar sempre desabilitado
  if (import.meta.env.PROD && FEATURES.DEBUG_MODE) {
    console.error('üö® Debug mode n√£o deve estar ativo em produ√ß√£o');
  }
}

// Mensagens para features desabilitadas
export const FEATURE_MESSAGES = {
  WHATSAPP_AUTH: 'Login com WhatsApp em desenvolvimento. Use email por enquanto.',
  STRIPE_PAYMENTS: 'Pagamentos em desenvolvimento.',
  BACKUP_RESTORE: 'Backup autom√°tico em desenvolvimento.',
  RELATORIOS: 'Relat√≥rios avan√ßados em desenvolvimento.',
  API_INTEGRATIONS: 'Integra√ß√µes com APIs externas em desenvolvimento.'
} as const;

// Fun√ß√£o para obter mensagem de feature desabilitada
export function getFeatureMessage(feature: keyof typeof FEATURE_MESSAGES): string {
  return FEATURE_MESSAGES[feature] || 'Funcionalidade em desenvolvimento.';
}